// <auto-generated />
using System;
using ClaimTrack.NetBackend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClaimTrack.NetBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClaimTrack.NetBackend.Models.ArticleVendu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAchat")
                        .HasColumnType("datetime2");

                    b.Property<int>("DureeGarantie")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("NomArticle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("ArticlesVendus");
                });

            modelBuilder.Entity("ClaimTrack.NetBackend.Models.Intervention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Interventions");
                });

            modelBuilder.Entity("ClaimTrack.NetBackend.Models.PieceDetail", b =>
                {
                    b.Property<int>("PieceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PieceId"));

                    b.Property<string>("IntitulePiece")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("PieceId");

                    b.ToTable("PieceDetails");
                });

            modelBuilder.Entity("ClaimTrack.NetBackend.Models.Reclamation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateReclamation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdArticle")
                        .HasColumnType("int");

                    b.Property<int?>("IdIntervention")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sujet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticle")
                        .IsUnique();

                    b.HasIndex("IdIntervention")
                        .IsUnique()
                        .HasFilter("[IdIntervention] IS NOT NULL");

                    b.HasIndex("IdUser");

                    b.ToTable("Reclamations");
                });

            modelBuilder.Entity("ClaimTrack.NetBackend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClaimTrack.NetBackend.Models.ArticleVendu", b =>
                {
                    b.HasOne("ClaimTrack.NetBackend.Models.User", "User")
                        .WithMany("ArticlesVendus")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClaimTrack.NetBackend.Models.Reclamation", b =>
                {
                    b.HasOne("ClaimTrack.NetBackend.Models.ArticleVendu", "Article")
                        .WithOne("Reclamation")
                        .HasForeignKey("ClaimTrack.NetBackend.Models.Reclamation", "IdArticle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaimTrack.NetBackend.Models.Intervention", "Intervention")
                        .WithOne("Reclamation")
                        .HasForeignKey("ClaimTrack.NetBackend.Models.Reclamation", "IdIntervention");

                    b.HasOne("ClaimTrack.NetBackend.Models.User", "User")
                        .WithMany("Reclamations")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Intervention");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClaimTrack.NetBackend.Models.ArticleVendu", b =>
                {
                    b.Navigation("Reclamation")
                        .IsRequired();
                });

            modelBuilder.Entity("ClaimTrack.NetBackend.Models.Intervention", b =>
                {
                    b.Navigation("Reclamation")
                        .IsRequired();
                });

            modelBuilder.Entity("ClaimTrack.NetBackend.Models.User", b =>
                {
                    b.Navigation("ArticlesVendus");

                    b.Navigation("Reclamations");
                });
#pragma warning restore 612, 618
        }
    }
}
